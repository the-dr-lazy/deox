// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`action should create action with \`''\` meta 1`] = `
Object {
  "meta": "",
  "type": "[Todo] show",
}
`;

exports[`action should create action with \`''\` payload 1`] = `
Object {
  "payload": "",
  "type": "[Todo] show",
}
`;

exports[`action should create action with \`0\` meta 1`] = `
Object {
  "meta": 0,
  "type": "[Todo] show",
}
`;

exports[`action should create action with \`0\` payload 1`] = `
Object {
  "payload": 0,
  "type": "[Todo] show",
}
`;

exports[`action should create action with \`NaN\` meta 1`] = `
Object {
  "meta": NaN,
  "type": "[Todo] show",
}
`;

exports[`action should create action with \`NaN\` payload 1`] = `
Object {
  "payload": NaN,
  "type": "[Todo] show",
}
`;

exports[`action should create action with \`false\` meta 1`] = `
Object {
  "meta": false,
  "type": "[Todo] show",
}
`;

exports[`action should create action with \`false\` payload 1`] = `
Object {
  "payload": false,
  "type": "[Todo] show",
}
`;

exports[`action should create action with \`null\` meta 1`] = `
Object {
  "meta": null,
  "type": "[Todo] show",
}
`;

exports[`action should create action with \`null\` payload 1`] = `
Object {
  "payload": null,
  "type": "[Todo] show",
}
`;

exports[`action should create action with error and meta 1`] = `
Object {
  "error": true,
  "meta": Object {
    "status": 403,
  },
  "payload": [Error],
  "type": "[Todo] fetch rejected",
}
`;

exports[`action should create action with error payload 1`] = `
Object {
  "error": true,
  "payload": [Error],
  "type": "[Todo] fetch rejected",
}
`;

exports[`action should create action with non-error payload 1`] = `
Object {
  "payload": Object {
    "name": "Read Robbin's",
  },
  "type": "[Todo] add",
}
`;

exports[`action should create action with non-error payload and meta 1`] = `
Object {
  "meta": "Book is on bookshelf",
  "payload": Object {
    "name": "Read Robbin's",
  },
  "type": "[Todo] add",
}
`;

exports[`action should create action with type-only 1`] = `
Object {
  "type": "[Todo] truncate",
}
`;
